---
replicaCount: 1

image:
  repository: docker.elastic.co/logstash/logstash
  tag: 6.8.4
  pullPolicy: IfNotPresent

elasticsearch:
  host: elasticsearch-master.elastic
  port: 9200

livenessProbe:
  httpGet:
    path: /
    port: monitor
  initialDelaySeconds: 240
  periodSeconds: 30
  timeoutSeconds: 30
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /
    port: monitor
  initialDelaySeconds: 240
  periodSeconds: 30
  timeoutSeconds: 30
  failureThreshold: 6
  successThreshold: 1

logstashJavaOpts: "-Xmx1g -Xms1g"
resources:
  requests:
    memory: 1Gi
  limits:
    memory: 2Gi

config:
  # queue.checkpoint.writes: 1
  # queue.drain: "true"
  # queue.max_bytes: 1gb  # disk capacity must be greater than the value of `queue.max_bytes`
  queue.type: memory
  pipeline.workers: 2
  pipeline.batch.size: 125
  xpack.monitoring.enabled: true
  xpack.monitoring.elasticsearch.hosts: "http://elasticsearch-master.elastic:9200"

inputs:
  main: |-
    input {
      beats {
        id => "beats-input"
        port => 5044
        client_inactivity_timeout => 150
      }
    }

filters:
  main: |-
    filter {

      if [@metadata][beat] == "filebeat" {
        if [kubernetes][container][name] == "js-ipfs" {
          grok {
            id => "ipfs-log-parser"

            pattern_definitions => {
              "JSON" => "{.*}"
              "MODULE" => "[\w?:]*"
            }   

            match => {
              message => [
                "%{TIMESTAMP_ISO8601:logdate} %{MODULE:module} %{GREEDYDATA:message} %{JSON:data}",
                "%{TIMESTAMP_ISO8601:logdate} %{MODULE:module} %{GREEDYDATA:message}"
              ]   
            }   

            overwrite => [ "message" ]
          }
  
          # Set @timestamp using the date in the log message.
          date {
            id => "timestamp"
            match => [ "logdate", "ISO8601" ]
            remove_field => [ "logdate" ]
          }   
  
          if [data] {
            json {
              id => "json-parse"
              source => "data"
              target => "data"
            }
          }
        }

        # Fingerprint events to avoid duplication
        fingerprint {
          id => "dedup-filebeat"
          concatenate_all_fields => true
          target => "[@metadata][fingerprint]"
          method => "SHA1"
        }
      }

      if [@metadata][beat] == "metricbeat" {

        # Fingerprint events to avoid duplication
        if [metricset][name] == "state_deployment" {
          fingerprint {
            id => "dedup-state-deployment"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][deployment][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "state_pod" {
          fingerprint {
            id => "dedup-state-pod"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][pod][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "state_container" {
          fingerprint {
            id => "dedup-state-container"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][pod][name]", "[kubernetes][container][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "state_node" {
          fingerprint {
            id => "dedup-state-node"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][node][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "node" {
          fingerprint {
            id => "dedup-node"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][node][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "pod" {
          fingerprint {
            id => "dedup-pod"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][pod][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "container" {
          fingerprint {
            id => "dedup-container"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][pod][name]", "[kubernetes][container][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "system" {
          fingerprint {
            id => "dedup-system"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][node][name]", "[kubernetes][system][container]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        } else if [metricset][name] == "volume" {
          fingerprint {
            id => "dedup-volume"
            concatenate_sources => true
            source => ["@timestamp", "[metricset][name]", "[kubernetes][pod][name]", "[kubernetes][volume][name]" ]
            target => "[@metadata][fingerprint]"
            method => "SHA1"
          }
        }
      }
    }

outputs:
  main: |-
    output {
      # file {
      #   path => "/usr/share/logstash/dump-stuff"
      # }
      elasticsearch {
        id => "elasticsearch-output"
        hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
        manage_template => false
        document_id => "%{[@metadata][fingerprint]}"
        index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
      }
    }
